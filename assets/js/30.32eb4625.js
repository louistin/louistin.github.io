(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{362:function(s,a,n){"use strict";n.r(a);var t=n(8),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"udp-协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udp-协议"}},[s._v("#")]),s._v(" UDP 协议")]),s._v(" "),n("h2",{attrs:{id:"udp-协议基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udp-协议基础"}},[s._v("#")]),s._v(" UDP 协议基础")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("UDP 协议报文首部")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("          Source Port          "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("       Destination Port        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("             Lenght            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           Checksum            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                             data                              "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLength "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 包括首部的全长, 最小为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" bit\nUDP 与 TCP 端口相互独立\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("UDP 报文")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("报文长度影响因素\n    UDP 协议限制.\n        最大长度 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("^16"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UDP Header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IP Header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    以太网数据帧长度, 数据链路层 MTU\n    Socket UDP 发送缓冲区大小\n\nUDP 数据包理想长度\n    确保数据包在下层协议中不要被切割\n    数据链路层以太网帧大小 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1518")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" byte, 除去帧头后, MTU "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" byte\n    局域网下建议 UDP 最大大小 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IP Header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UDP Header"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1472")]),s._v("\n    Internet 标准 MTU "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("576")]),s._v(" byte\n    Internet 编程建议 UDP 最大大小 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("576")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("548")]),s._v(" byte\n\nUDP 报文长度可以为0\n一个 UDP 数据报对应组装一份 IP 数据报\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("UDP 数据包发送与接收")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("UDP 数据包有界性\n    阻塞模式下, UDP 以数据包作为界限, 客户端发送次数 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 服务端接收次数\nUDP 数据包无序性和不可靠性\n\nUDP 数据包在传输中, 由于 MTU 限制, 可能会出现分片传输, UDP 分片与组片问题由 IP 层处理,\n  提交到传输层的一定是一个完整的 UDP 包"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("传输层 buffer 足够大时"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 如果某个 IP 分片丢失,\n  UDP 中 CRC 检验不通过, 则会丢弃数据, 也不会通知是否接收成功.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("IP 分片")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("IP 分片可以是在源发送端主机, 也可以是在中间路由器上.\nIP 数据报分片后在到达目的地后进行重新组装"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("非最终目的地, 可以是中间路由器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n分片过程中, IP Header 中有一个标识字段标识 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" fragments, 除最后一片外, 其他每片都\n  将该比特标志字段置为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 标志字段中有一个比特为 Dont fragments, 置为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 则 IP 将不\n  对数据报进行分片.\nIP 分片后, 每一个分片都成为一个分组, 具有自己的 IP Header.\n任何一片数据丢失, 都需要重传整个数据报, 这依赖于传输层协议机制. 中间路由器会执行未知的分片\n  操作, 所以要尽量避免分片.\n分片后, 传输层首部只会出现在第一片数据中.\nIP 数据报是指 IP 层端到端的传输单元"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("在分片前和重新组装之后"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n分组是指在 IP 层和链路层之间传送的数据单元, 一个分组可以是一个完整的 IP 数据报, 也可以是\n  IP 数据报的一个分片\n\n当 UDP 数据报数据部分长度 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1472")]),s._v(" 时, 就会分片.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("IP 从上层接收到数据后, 要根据 IP 地址来判断从哪个接口发送数据, 并进行 MTU 查询, 如果数\n  据大小超过 MTU 则进行数据分片. 数据的分片对上层和下层透明.\n\n在 IP 头中, 16bit 识别号唯一记录了一个 IP 包的 ID, 具有同一个 ID 的 IP 分片将会被重\n  新组装, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("位片位移则记录了某 IP 片相对整个包的位置, 片位移前的 3bit 标志则标识该分片\n  后是否还有新的分片. 这三个标识组成了 IP 分片的所有信息, 接收方可以根据这些信息对 IP\n  数据进行重新组织.\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("UDP 丢包")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("IP 层分片丢失, CRC 检验包不完整\nUDP Socket 缓冲区满\n    "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/sys/net/core/rmem_default "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/sys/net/core/rmem_max"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n      查看系统 Socket 缓冲默认值与最大值. 在服务器未过载时可以通过加大缓冲区缓解丢包\nUDP Socket 缓冲区过小\nARP 缓存过期\n    ARP 缓存时间为 10min, ARP 缓存列表没有目的端 MAC 或缓存过期, 户发送 ARP 请求获\n      取 MAC 地址, 在没有获取到之前, 内核会默认缓存 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 个 UDP 包到 arp_queue 中,\n      多余的包会丢弃. 可以修改 /proc/sys/net/ipv4/neigh/unres_qlen 增加缓存\n\n丢包信息查看\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/net/udp\n        drops 丢包信息\n        inode Soket 全局唯一虚拟节点号\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -P -n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" inode 查看具体进程\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("UDP TCP 探讨")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("理论上 UDP 无连接, 无需重传确认, 应该比 TCP 高效, 但实际不一定.\n影响 UDP 高效的因素:\n    UDP 不受 MTU 影响, UDP 发送大量小包, 或超大包而又有分片丢失时, 以及网络状况动态变\n      化时, 都可以导致网络有效吞吐率低\n    无法动态调整发包\n        UDP 没有确认机制, 没有流量控制和拥塞控制, 不能调整发包速率, 导致丢包. 丢包时,\n          不合理的简单重传策略也会导致重传风暴, 进一步恶化网络环境\n    UDP 改进成本较高\n        用户添加简单重传和动态发包大小优化\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("UDP 适用场景")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("高通信实时性要求和低持续性要求\n    短连接通信\n        只需要发几个包, 并且对丢包容忍度好\n        DNS 查询\n    高实时性\n        NTP 协议\n多点通信场景\n    NAT 穿透\n    多人实时音视频\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])]),s._v(" "),n("h2",{attrs:{id:"faq"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[s._v("#")]),s._v(" FAQ")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("数据包长度超过 2^16 - 1 - 8 - 20 = 65507 字节会怎样?")]),s._v(" "),n("p",[n("code",[s._v("cat /proc/sys/net/core/wmem_default")]),s._v(" UDP 发送缓冲区大于此值时, "),n("code",[s._v("send")]),s._v("/"),n("code",[s._v("sendto")]),s._v("\n函数报错误码 1(Operation not permitted, Message too long); 发送缓冲区小于此值\n时, "),n("code",[s._v("send")]),s._v("/"),n("code",[s._v("sendto")]),s._v("  函数报错误码 1(Operation not permitted, No buffer\nspace available)")])]),s._v(" "),n("li",[n("p",[s._v("客户端先后发送 300 500 字节数据, 在服务端三次阻塞调用 recvfrom(300), 存在哪些可能?")]),s._v(" "),n("p",[s._v("a. 由于存在有界性, 可能第一次收到 300 字节, 第二次收到 500 字节, 但是用户空间 buffer\n不够, 丢掉 200 字节, 第三次没数据阻塞"),n("br"),s._v("\nb. 由于存在无序性, 有可能 a 中的第一次和第二次收到的流程相反"),n("br"),s._v("\nc. 由于不可靠性, 可能中间某次丢包导致一直阻塞到超时"),n("br")])]),s._v(" "),n("li",[n("p",[s._v("UDP 冗余传输方案")]),s._v(" "),n("p",[s._v("假如传输 1 2 3 4 5 6 UPD 数据包. 实际传输中按照 1 12 23 34 45 56 6 这样传输."),n("br"),s._v("\n优点降低丢包率, 缺点是加重网络负载, 有可能丢包更多了...")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);