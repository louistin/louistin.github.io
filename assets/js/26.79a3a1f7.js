(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{357:function(s,a,n){"use strict";n.r(a);var t=n(8),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"网络编程快速入门"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络编程快速入门"}},[s._v("#")]),s._v(" 网络编程快速入门")]),s._v(" "),n("h2",{attrs:{id:"快速理解网络通信协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速理解网络通信协议"}},[s._v("#")]),s._v(" 快速理解网络通信协议")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("五层模型")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("实体层\n    光缆, 电缆等, 传输 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n链接层\n    以太网协议\n        解决局域网点对点通信\n        每帧"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("/22 byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("46")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    MAC 地址\n        绑定在网卡上, 定位网卡和数据包路径\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("48")]),s._v("位, 通常表示为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" 个十六进制数 00-B0-D0-86-BB-F7\n    广播\n        ARP 协议\n        以太网发包是向本"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("子"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("网络内所有计算机发送, 让每台计算机自己判断是否为接收方"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("根据\n          每包标头MAC地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n网络层 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("主机到主机"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    IP 协议\n        连接多个局域网, 地址协议, 不保证数据完整性\n        定位计算机所在的子网络, 为每台计算机分配 IP 地址\n        网络地址 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 网络号 + 主机号 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1 + .34\n        子网掩码 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 网络部分全为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" + 主机部分全为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(". 判断 IP 地址的网络部分与主机部分\n    IP 数据包\n        Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v(" byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        Head 包括版本, 长度, IP地址等\n        一个 IP 数据包在以太网中有可能会分包\n    ARP 协议\n        得到同一子网络中目标主机 IP\n        为什么需要 ARP 协议?\n            IP 协议传输数据必须知道 IP 地址和 MAC 地址, IP 地址一般已知\n            根据 IP 地址获取 MAC 地址的方法:\n                两台主机位于非同一个子网络, 需要将数据包传给子网络连接处的\n                  网关"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Gateway"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 让其处理\n                两台主机位于同一个子网络, ARP 协议发出数据包"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("包含在以太网数据帧中"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 其\n                  中包含目标主机 IP, 目标 MAC 填写 FF:FF:FF:FF:FF:FF, 表示为广播\n                  地址. 子网络中每一台主机都会收到数据包, 取出 IP 地址后, 与自身 IP\n                  比较, 相同则回复, 告知自己的 MAC 地址, 否则就丢弃.\n\n传输层 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("端到端"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    端口 Port\n        每一个使用网卡的程序的编号\n        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1023")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        主机 + 端口 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 套接字 Socket\n    UDP 协议\n        Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65527")]),s._v(" byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        Head 发出端口 + 接收端口\n        简单, 可靠性差\n    TCP 协议\n        数据包长度没有限制, 但为了保证网络效率, 通常不会超过 IP 数据包 Data 长度\n        保证数据通信的完整性和可靠性, 防止丢包\n\n应用层\n    直接面对客户\n\nHead + Head + Head + Data\n以太网  IP     TCP    应用层数据\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("IP 地址")]),s._v(" "),n("p",[n("strong",[s._v("IP 地址分类")]),n("br")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_ip_address_001.webp"),alt:"IP 地址分类"}}),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_ip_address_002.webp"),alt:"IP 地址分类"}}),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("网络地址 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Network ID + Host ID\n          "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1 + .34\nA B C 类地址为单播地址, 用于一对一通信\nD 类地址用于多播\nE 类地址保留\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n    不是真正意义上的 IP 地址, 表示所有不清楚的主机和目的网络\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255\n    限制广播地址, 本网段内"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("同一广播域"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("所有主机. 这个地址不能被路由器转发\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1\n    本机地址, 别名 localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("但并不局限于 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1, 例如还有 IPV6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    所有 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(".x.x.x 都属于回环地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("发往该类地址的数据包都应该被 loop back"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    用途: 回环测试 程序测试"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Web 服务器绑定"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" DDos 攻击防御\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("224.0")]),s._v(".0.1\n    组播地址, 从 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("224.0")]),s._v(".0.0 - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("239.255")]),s._v(".255.255 都是这样的地址. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("224.0")]),s._v(".0.1 特指所有主\n      机, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("223.0")]),s._v(".0.2 特指所有路由器.\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),s._v(".x.x\n    主机使用 DHCP 时, 当 DHCP 服务故障时, Windows 系统会为你分配一个这样的地址\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".x.x.x "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".x.x ~ "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.31")]),s._v(".x.x "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".x.x\n    私有地址. 接入 Internet 时, 要使用 NAT, 将私有地址翻译成共用地址\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 是一个回环地址, 并不表示"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"本机"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0 真正表示"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"本网络中的本机"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("集线器 交换机 路由器")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("集线器 Hub\n    物理层\n    通过网线直接传送数据\n    不能分辨数据目的地, 只能广播\n\n交换机\n    数据链路层\n    根据 MAC 地址, 实现任意两台计算机之间的数据传输\n\n路由器\n    网络层\n    通过 IP 寻址\n    TCP/IP 协议\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("电脑联网")]),s._v(" "),n("ul",[n("li",[s._v("联网条件\n"),n("ul",[n("li",[s._v("本机 IP, 子网掩码, 网关 IP 地址, DNS IP 地址")])])])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("静态 IP 地址\n    手动配置\n\n动态 IP 地址\n    DHCP 协议动态获取\n        DHCP 协议是建立在 UDP 协议之上的应用层协议\n        Head + Head + Head + Data\n        以太网  IP     UDP    DHCP数据\n            以太网标头: 本机 MAC 地址, 接收方"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DHCP 服务器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" MAC 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("未知 广播\n                FF-FF-FF-FF-FF-FF"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            IP 标头: 发出方 IP 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0 未知"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 接收方 IP 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("未知\n                "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            UDP 标头: 发出方端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 接收方端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("67")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        子网中每台计算机都收到数据包, DHCP 服务器根据"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("判断\n          自己为接收方, 其他丢弃\n        DHCP 服务器分配好 IP 后, 发送 DHCP 响应包, 以太网标头为双方 MAC 地址, IP 标\n          头地址为 DHCP 服务器地址和 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("接收方"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 发送方端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("67")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 接收\n          方端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 分配的 IP 地址等参数在 Data 中\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("互联网协议")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# www.google.com 的访问流程")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 浏览器地址输入 www.google.com\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 将地址发送到 DNS Server "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.8")]),s._v(".8.8, 响应 Google IP 为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.194")]),s._v(".72.105\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 使用子网掩码 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0 AND Google IP, 得到 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.194")]),s._v(".72.0\n    使用子网掩码 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0 AND 本机 IP, 得到 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.0\n    两者不相等, 说明 Google 不在本机子网上, 数据包必须经过网关 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1 转发, 也即\n      是接收方的 MAC 地址将是网关 MAC 地址\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". HTTP 内容 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4960")]),s._v(" 字节\n    GET / HTTP/1.1\n    Host: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://www.google.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("www.google.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("/url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    Connection: keep-alive\n    User-Agent: Mozilla/5.0 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Windows NT "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n    Accept: text/html,application/xhtml+xml,application/xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("q")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.9")]),s._v(",*/*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("q")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8")]),s._v("\n    Accept-Encoding: gzip,deflate,sdch\n    Accept-Language: zh-CN,zh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("q")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8")]),s._v("\n    Accept-Charset: GBK,utf-8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("q")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.7")]),s._v(",*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("q")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),s._v("\n    Cookie: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". Google HTTP 端口为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(", 本机端口"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("-65535"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1080")]),s._v("\n    TCP 数据包长度 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4980")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + HTTP Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4940")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". IP 数据包设置双方 IP 地址"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.194")]),s._v(".72.105 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    IP 数据包长度 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + TCP Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4980")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(". 以太网数据包设置双方 MAC 地址, 接收方为网关 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.1 的 MAC 地址\n   以太网数据包长度 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" + IP Data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1480")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    IP 数据包分割为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("560")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(". 多个网关转发, Google 服务器根据 IP Head 序号, 拼包, 解析数据, 处理, 响应\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(". 完成一次网络通信\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("Ping")]),s._v(" "),n("p",[n("strong",[s._v("ICMP 协议")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_icmp_001.webp"),alt:"ICMP 协议"}})]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("基于 ICMP 协议工作, 探测本机与网络中另一台主机之间是否可达的命令\n    ICMP 协议, Internet 控制报文协议, 基于 IP 协议\n    ICMP 协议会要求目标主机在收到消息后, 必须返回 ICMP 应答消息给源主机. 如果源主机在一\n      定时间内收到目标主机应答, 则表明两台主机间网络是可达的.\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 主机 A "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 测试与主机 B "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 执行 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.2\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" 命令在主机 A 上构建 ICMP 请求数据包, 然后 ICMP 协议将这个数据包以及目标 IP\n    等信息交给 IP 层协议\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". IP 层协议的达消息后, 将源地址, 目标地址, 再加上一些其他控制信息, 构建 IP 数据包\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". IP 数据包构建完成后, 需要加上 MAC 地址. 因此还需要通过 ARP 映射表找出目标 IP 所对应\n    的 MAC 地址, 拿到目标 MAC 地址后, 和本机 MAC 一起交给数据链路层, 组装成一个数据帧,\n    将其传送出去\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 目标主机收到数据帧之后, 首先检查其目标 MAC 是否为本机, 确认后检查数据帧, 将 IP 数据\n    包取出, 交给本机 IP 层, 然后经 IP 层检查完后, 再将 ICMP 数据包取出来交给 ICMP 协\n    议处理. 处理完毕后, 构建 ICMP 应答数据包, 会发给源主机\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 在一定时间内, 源主机收到应答包, 说明网络可达. 没收到则说明不可达. 除检测可达外, 还可\n    以利用应答时间和发起时间差, 计算数据包延迟耗时\n\nICMP 协议分类\n    查询报文类型\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" 查询 子网掩码查询 时间戳查询\n    差错报文类型\n        目标不可达 超时 参数问题 重定向\n\nTraceroute 指令\n    利用 ICMP 的差错报文可以实现遍历到数据包传输路径上的所有路由器.\n    每经过一个路由器, TTL 值 -1, 当 TTL "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 时, 路由器会将数据包丢弃, 然后产生一个错\n      误类型的 ICMP 数据包会发给源主机, 这时候源主机就拿到了第一个路由节点的 IP 和相关\n      信息. 如此反复通过改变 TTL 值, 可以拿到源主机到目标主机间所有路由器信息.\n    数据包到达目标主机后, 可以通过源主机设置一个不可达的目标端口号, 那么当这个数据包到达目\n      标主机时, 目标主机会产生一个"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"端口不可达"')]),s._v("的错误 ICMP 报文返回给源主机\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("参考资料")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1004762",target:"_blank",rel:"noopener noreferrer"}},[s._v("从 Tranceroute 看网络问题"),n("OutboundLink")],1)])])])]),s._v(" "),n("li",[n("p",[s._v("P2P")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("局域网 LAN\n\n网络地址转换"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("NAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    内网通过网关访问外网\n    地址转换表\n        源 IP:Port  映射后 IP:Port\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])])]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"socket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[s._v("#")]),s._v(" Socket")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Socket 创建")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("Socket 其实是使用 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("peer_addr:peer_port, local_addr:local_port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 四元组来区别不同\n  socket 实例.\n一个客户端连接情况下, 有三个 socket\n    服务端负责监听 ServerSocket "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("*:*, *:987"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("7")]),s._v(">")]),s._v(" 可接受任何客户端和本地任何 IP\n    accept 返回 socket "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:client_port, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:987"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("7")]),s._v(">")]),s._v("\n    客户端 socket "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("server_ip:9877, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:client_port"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("Socket 读写")]),s._v(" "),n("p",[n("strong",[s._v("Socket 读写")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_socket_rdwr_001.gif"),alt:"Socket 读写"}})]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" buffer, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" buffer\n    调用系统 API 对 socket 进行写操作是将数据拷贝到套接字对象的 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" buffer, 内核网\n      络模块会有专门的单独线程负责将 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" buffer 的数据拷贝到网卡, 网卡再将数据发送\n    读数据操作是调用系统 API 将 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" buffer 的数据拷贝到用户程序内存中来\n\n阻塞\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" buffer 空间有限, 如果应用程序写数据太快, 空间写满了, 写操作就会阻塞, 直到这\n      个空间有足够的位置空出来. NIO 写操作不阻塞, 通过返回值确定写入量, 未写入的数据用户\n      程序会缓存起来, 后续再写入.\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" buffer 也可能内容为空, 此时读操作也会阻塞, 直到 "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" buffer 中有足够的内容.\n      NIO 不会阻塞, 有多少读多少, 不够的后续继续读.\nACK\n    写缓冲数据拷贝到网卡后, 并不会立刻删除, 需要等待对方 ACK 过来后才会删除. 网络不好使,\n      写缓冲也会满\n包头\n    数据每经过一层, 就回添加上一层对应的包头\n速率\n    读缓冲满后, 网卡收到的消息会丢弃, 也并不会发 ACK. 此时 TCP 协议会调整动态窗口,\n      UDP 则会彻底丢失\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])])])]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"tcp-udp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp"}},[s._v("#")]),s._v(" TCP UDP")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("TCP 协议作用")]),s._v(" "),n("ul",[n("li",[s._v("以太网协议解决局域网点对点通信")]),s._v(" "),n("li",[s._v("IP 协议可以连接多个局域网")]),s._v(" "),n("li",[s._v("TCP 协议保证数据通信的完整性和可靠性, 防止丢包")])])]),s._v(" "),n("li",[n("p",[s._v("TCP 数据包大小")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("以太网负载payload "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" 字节\n    IP 标头 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" 字节, payload "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1480")]),s._v(" 字节\n        TCP 头 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" 字节, payload "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1460")]),s._v(" 字节\n\nTCP IP 协议往往有额外头信息, TCP 实际 payload ~"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1400")]),s._v(" 字节\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("TCP 数据包编号 SEQ")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("第一个包是随机数, 例如 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 号包, 假设负载长度为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" 字节, 则下一包编号就是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n每个包都可以得到两个编号: 自己的编号, 下一个包的编号. 接收方可以根据编号将其顺序还原\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("TCP 数据包的组装")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("TCP 不提供机制表示原始数据大小, 由应用层协议规定\nOS 根据 TCP 数据包中的端口, 将组装好的数据转给对应的应用\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("ACK 和慢启动")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("TCP 协议为做到效率和可靠性统一, 慢启动机制在开始时会发送的较慢, 根据丢包调整速率.\n\n内核中 TCP_INIT_CWND 设定, 开始时, 发送方一次性发送 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 个数据包, 即发送窗口为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(", 然\n  后停下等待接收方确认, 再继续发送. 默认情况下, 接收方每收到两个 TCP 数据包, 发送一个确\n  认消息, 即 ACK "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("acknowledgement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n\nACK 携带信息:\n    期待要收到的下一个数据包编号\n    接收方的接收窗口剩余容量\n发送方根据 ACK 信息, 推测接收方接收速率, 做出发送速率调整, 即发送窗口调整.\n\nTCP 是双向通信, 双方都需要发送 ACK, 两方窗口可以不一样\nACK 很小, 通常与数据合并在同一个数据包中发送\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("数据可靠性保证")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("每个数据包都带有下一个数据包编号, 如果下一个没收到, 则 ACK 不会变化, 会一直显示为期待值\n接收方未受到期待值包, 即使收到后面的包, ACK 也不会变\n发送方发现收到连续三个重复 ACK, 或超时还未收到任何 ACK, 即确认丢包, 会再次发送这个包\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("TCP 三次握手 四次挥手")]),s._v(" "),n("p",[n("strong",[s._v("三次握手 四次挥手")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp001.webp"),alt:"TCP 三次握手 四次挥手"}})]),s._v(" "),n("p",[n("strong",[s._v("三次握手")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp_connect001.gif"),alt:"TCP 三次握手状态"}}),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp_connect002.gif"),alt:"TCP 三次握手状态"}})]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("半打开状态:\n    syn_sent\n    syn_rcvd\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("数据传输")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp_data001.gif"),alt:"TCP 数据传输"}}),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp_data002.gif"),alt:"TCP 数据传输"}})]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("TCP 连接是双工的, 无论哪方都可以主动发起数据传输, 同时也都需要对方回复 ACK 确认\n数据发送与接收双方需要协商合适的发送与接收速率, 即 TCP 窗口大小\n接收方可以在接收到多个数据包后, 批量 ACK\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("四次挥手")]),n("br"),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_tcp_disconnect001.gif"),alt:"TCP 四次挥手状态"}}),s._v(" "),n("img",{staticStyle:{width:"40%"},attrs:{src:s.$withBase("/image/network/readme_tcp_disconnect002.gif"),alt:"TCP 四次挥手状态"}})]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("半关闭状态"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("主动关闭方发起关闭后, 并没有立刻关闭"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ntime_wait 状态\n    主动关闭的一方在回复完对方的挥手"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ACK"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("后, 进入的长期状态"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("标准时间为 4min, 可调"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",\n      然后才会进入 closed 状态, 释放套接字资源\n    作用是重传最后一个 ACK 报文, 确保对方收到. 如果对方未收到, 重发 FIN 报文, 需要响应\n    在此间, 网络上的残存报文传到时, 会被立刻丢弃\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" MSL "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("最长报文寿命"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", 确保残留文件彻底消失, 不影响当前端口再次利用\n    四次挥手有可能中间两次合并为三次挥手, 主动关闭方从 fin_wait_1 直接进入 time_wait\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("TCP 建立连接并初始化目标\n    初始化资源\n    告诉对方我的序列号\n\n流程\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". Client 首先发送一个 SYN 包告诉 Server 自己的初始化序列号 X\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". Sever 端收到后, 回复给 Client 一个 ACK 确认包, 告诉 Client 我收到了\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". Server 向 Client 发送自己的初始序列号 Y\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". Client 收到后, 回复 Server 一个 ACK 确认包\n    其中, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 可以合并为异步, 即将 ACK 确认包和 SYN 序列号包一同发送\n\n数据发送方式\n    理论上发送的数据流不存在大小限制, 但由于缓冲区大小限制, 数据有可能截断\n    数据到达有序\n    一旦发生丢包, TCP 会将后续包缓存起来, 等前面的包重传并接收到后再继续发送\n    数据有重传也有去重\n\n使用场景\n    When "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" doubt, use TCP.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("TODO: TCP 心跳, 长连接, 短连接等")])]),s._v(" "),n("li",[n("p",[s._v("UDP")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("面向数据报, 不可靠, 无连接\n只需知道对方 IP, 将数据报一份一份发送过去, 其他的不用关心\n最大长度存在限制, 协议头报文长度 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" 位\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("^16 - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UDP Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("IP Head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65507")]),s._v(" 字节\n    实际中为避免传输中数据包分割, 每个数据报最大字节为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("576")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MTU"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("548")]),s._v("\n\nUDP 丢包可能因素\n    数据报分片重组丢失\n    UDP 缓冲区填满丢弃\n\n使用场景\n    实时性要求高\n    多点通信\n\n采用关键点\n    网络带宽需求小, 实时性要求高\n    应用无需维持连接\n    低功耗\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])])])]),s._v(" "),n("hr"),s._v(" "),n("h2",{attrs:{id:"http"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[s._v("#")]),s._v(" HTTP")]),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_httprequest001.webp"),alt:"HTTP 请求"}}),s._v(" "),n("img",{attrs:{src:s.$withBase("/image/network/readme_httpresponse001.webp"),alt:"HTTP 响应"}}),s._v(" "),n("ul",[n("li",[n("p",[s._v("概念")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("REQUEST:\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("method"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("request-url"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("headers"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entity-body"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\nRESPONSE:\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("version"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("status"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("reason-phrase"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("headers"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("entity-body"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("Method")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("GET\nPOST\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("响应状态码")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v(" Switching Protocols "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 服务器协议转换\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" OK "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 请求成功"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("其后是对 GET 和 POST 请求的应答文档"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("201")]),s._v(" Created "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 请求被创建完成, 同时新的资源被创建\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("301")]),s._v(" Moved Permanently "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 所请求的页面已经转移至新的 url\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("302")]),s._v(" Found "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 所请求的页面已经临时转移至新的 url\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("303")]),s._v(" See Other "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 所请求的页面可在别的 url 下被找到\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("304")]),s._v(" Not Modified "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 资源未修改\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("400")]),s._v(" Bad Request "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 服务器未能理解请求\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("401")]),s._v(" Unauthorized "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 被请求的页面需要身份验证, 需要提供用户名和密码\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("403")]),s._v(" Forbidden "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 服务器理解请求, 但拒绝执行\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("404")]),s._v(" Not Found "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 请求失败, 请求所希望的资源未在服务器上发现\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" Internal Server Error: 请求未完成, 服务器遇到不可预知的情况\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("HTTP 缓存")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("相关概念:\n    新鲜度检测\n        发起请求时, 先对缓存资源进行判断是否可以直接使用\n        相关服务器响应报头字段\n            Cache-Control: max-age\n            Expire\n    再验证\n        发现缓存超时, 需要先去服务器查看该资源是否改变\n        相关条件请求头部字段\n            If-Modified-Since\n            If-None-Match\n            If-Unmodified-Since\n            If-Range\n            If-Match\n    再验证命中\n        服务器发现该 URL 资源没有发生变化, 返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("304")]),s._v(" Not Modified, 且不再返回该实体\n\n流程:\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 从接收到的请求中, 解析出 URL 和各个首部\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 查询本地是否有混村副本可用\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 如果有缓存, 则进行新鲜度检测, 如果缓存足够新鲜, 则使用缓存作为响应返回"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 如果不新\n        鲜了, 则构造条件请求, 发往服务器验证. 如果没有缓存, 直接将请求发往服务器.\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 从服务器返回的响应, 更新或是新增到缓存中\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("OAuth 认证授权协议")])]),s._v(" "),n("li",[n("p",[s._v("HTTPS")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);